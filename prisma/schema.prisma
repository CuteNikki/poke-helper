generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId String @id

  // Configuration
  birthday UserBirthday? @relation("UserBirthday")

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserBirthday {
  userId String @id
  User   User   @relation("UserBirthday", fields: [userId], references: [userId])

  // Configuration
  date     DateTime
  timezone String?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Guild {
  guildId String @id

  // Configuration
  counting GuildCounting? @relation("GuildCounting")
  birthday GuildBirthday? @relation("GuildBirthday")

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GuildBirthday {
  guildId String @id
  guild   Guild  @relation("GuildBirthday", fields: [guildId], references: [guildId])

  // Configuration
  channelId String

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Indexes
  @@unique([guildId, channelId])
}

model GuildCounting {
  guildId String @id
  Guild   Guild  @relation("GuildCounting", fields: [guildId], references: [guildId])

  // Configuration
  resetOnFail Boolean @default(false)
  channelId   String

  // State
  lastNumber          Int       @default(0) @map("currentNumber")
  lastNumberAt        DateTime? @map("currentNumberAt")
  lastNumberMessageId String?   @map("currentNumberMessageId")
  lastNumberByUserId  String?   @map("currentNumberByUserId")

  // History
  highestNumber          Int       @default(0)
  highestNumberAt        DateTime?
  highestNumberByUserId  String?
  highestNumberMessageId String?

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Indexes
  @@index([channelId])
}
